DDL(DATA DEFINITION LANGUAGE)
1. CREATE
	CREATE TABLE TABLENAME (COLUMNAME DATATYPE (SIZE), .....) VALUES (12, 'HI', 07/02/2002);
2. ALTER
	ALTER TABLE TABLENAME ADD(COLUMNNAME DATATYPE (SIZE))
	ALTER TABLE TABLENAME ADD(COLUMNNAME DATATYPE (SIZE), (COLUMNNAME DATATYPE (SIZE) ..........)
	ALTER TABLE TABLENAME MODIFY(COLUMNNAME DATATYPE (SIZE))
3. DELETE A COLUMN
	ALTER TABLE TABLENAME DROP COLUMN COLUMNNAME;
	ALTER TABLE TABLENAME DROP COLUMN COLUMNNAME1, COLUMNANAME2.....;
4. TRUNCATE
	TRUNCATE TABLE TABLENAME
5. DROP
	DROP TABLE TABLENAME
6. RENAME
	RENAME TABLE OLDNAME TO NEWNAME  //FOR TABLE
	ALTER TABLE TABLENAME RENAME COLUMN OLDNAME TO NEWNAME



DML(DATA MANIPULATION LANGUAGE)

1. INSERT 
	INSERT INTO TABLE NAME (COLUMNAME, ...) VALUES (VALUE1...)
2. UPDATE
	UPDATE TABLE TABLENAME SET COLUMNNAME="VALUE" WHERE (CONDN)
3. DELETE
	DELETE FROM TABLENAME
	DELETE FROM TABLENAME WHERE CONDN


1. INNER JOIN
ðŸ‘‰ Returns only the rows where there is a match in both tables.
sql
SELECT Employees.emp_id, Employees.emp_name, Departments.dept_name
FROM Employees
INNER JOIN Departments
ON Employees.dept_id = Departments.dept_id;

2. LEFT JOIN (LEFT OUTER JOIN)
ðŸ‘‰ Returns all rows from the LEFT table, even if there is no match in the RIGHT table. Missing matches
will show NULL.
sql
SELECT Employees.emp_id, Employees.emp_name, Departments.dept_name
FROM Employees
LEFT JOIN Departments
ON Employees.dept_id = Departments.dept_id;

3.  RIGHT JOIN (RIGHT OUTER JOIN)
ðŸ‘‰ Opposite of LEFT JOIN. Returns all rows from the RIGHT table, even if thereâ€™s no match in the LEFT.
sql
SELECT Employees.emp_id, Employees.emp_name, Departments.dept_name
FROM Employees
RIGHT JOIN Departments
ON Employees.dept_id = Departments.dept_id;

4. FULL JOIN (FULL OUTER JOIN)
ðŸ‘‰ Returns all rows from both tables. If no match, returns NULL.
sql
SELECT Employees.emp_id, Employees.emp_name, Departments.dept_name
FROM Employees
FULL OUTER JOIN Departments
ON Employees.dept_id = Departments.dept_id;

5. CROSS JOIN
ðŸ‘‰ Returns all possible combinations (Cartesian product).
sql
SELECT Employees.emp_id, Employees.emp_name, Departments.dept_name
FROM Employees
CROSS JOIN Departments;




1 -- INNER JOIN
SELECT columns
FROM table1
INNER JOIN table2
ON table1.column = table2.column;

2 -- LEFT JOIN / LEFT OUTER JOIN
SELECT columns
FROM table1
LEFT JOIN table2
ON table1.column = table2.column;

3 -- RIGHT JOIN / RIGHT OUTER JOIN
SELECT columns
FROM table1
RIGHT JOIN table2
ON table1.column = table2.column;

4 -- FULL OUTER JOIN
SELECT columns
FROM table1
FULL OUTER JOIN table2
ON table1.column = table2.column;

5 -- CROSS JOIN
SELECT columns
FROM table1
CROSS JOIN table2;
